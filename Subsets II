class Solution {
    void genComb(vector<int>& nums, int idx, vector<vector<int>>& res,
                 vector<int>& temp) {
        res.push_back(temp);
        for (int i = idx; i < nums.size(); i++) {
            if (i != idx && nums[i] == nums[i - 1]) {
                continue;
            }
            temp.push_back(nums[i]);
            genComb(nums, i + 1, res, temp);
            temp.pop_back();
        }
    }

public:
    vector<vector<int>> subsetsWithDup(vector<int>& nums) {
        vector<vector<int>> res;
        vector<int> temp;
        sort(nums.begin(), nums.end());
        genComb(nums, 0, res, temp);
        return res;
    }
};
